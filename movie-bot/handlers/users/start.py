import config
import logging

from aiogram.types import Message
from aiogram.dispatcher.filters import Command
from loader import dp
from states.main import MainStates
from google.cloud import dialogflow

from utils.data_cleaner import clean_inp

logger = logging.getLogger(__name__)


@dp.message_handler(Command("start"), state="*")
async def start(message: Message):
    logger.info(f'User @{message.chat.username} opened /start')
    msg = """
    üëã –ü—Ä–∏–≤–µ—Ç!
    –Ø –º–æ–≥—É –¥–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∏–ª—å–º–∞—Ö, –∞–∫—Ç—ë—Ä–∞—Ö –∏–ª–∏ —É–∑–Ω–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã. –° —á–µ–≥–æ –Ω–∞—á–Ω—ë–º?
    """
    await MainStates.initial.set()
    await message.bot.send_message(message.chat.id, msg)


greetings_phrases = ["–ø—Ä–∏–≤–µ—Ç", "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ", "–¥–æ–±—Ä—ã–π –¥–µ–Ω—å", "–¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ", "–¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä", "–∑–¥–æ—Ä–æ–≤–æ", "–∑–¥–æ—Ä–æ–≤"]
movie_phrases = ["—Ñ–∏–ª—å–º", "–∫–∏–Ω–æ", "—Ñ–∏–ª—å–º–µ—Ü", "—Ñ–∏–ª—å–º—ã", "—Ñ–∏–ª—å–º–µ", "—Ñ–∏–ª—å–º—É"]
actor_phrases = ["–∞–∫—Ç–µ—Ä", "–∞–∫—Ç—ë—Ä", "–∞–∫—Ç—Ä–∏—Å–∞", "–∞–∫—Ç–µ—Ä–∞", "–∞–∫—Ç—ë—Ä–∞", "–∞–∫—Ç—Ä–∏—Å–æ–π", "–∞–∫—Ç–µ—Ä–æ–º", "–∞–∫—Ç—ë—Ä–æ–º", "–∞–∫—Ç—Ä–∏—Å–æ–π", "–∞–∫—Ç–µ—Ä—ã"]
weather_phrases = ["–ø–æ–≥–æ–¥–∞", "–ø–æ–≥–æ–¥—ã", "–ø–æ–≥–æ–¥–∫–∞", "–ø–æ–≥–æ–¥—É", "—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", "—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É"]


async def get_answer_dialogflow(message: str):
    try:
        session_client = dialogflow.SessionsClient()
        session = session_client.session_path(config.dialogflow_project_id, config.dialogflow_session_id)
        text_input = dialogflow.TextInput(text=message, language_code=config.dialogflow_lang_code)
        query_input = dialogflow.QueryInput(text=text_input)
        response = session_client.detect_intent(
            request={"session": session, "query_input": query_input}
        )
        res = response.query_result.fulfillment_text
        return res if res else "–ü–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä—É–π, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —è –Ω–µ –ø–æ–Ω—è–ª..."
    except Exception as err:
        logger.error(f"Can't get response from Dialogflow. {err}")
        return "Can't get response from Dialogflow"


@dp.message_handler(lambda message: (message.text.lower() in greetings_phrases and not message.text in movie_phrases),
                    state=MainStates.initial)
async def process_hello(message: Message):
    logger.info(f'User @{message.chat.username} said "{message.text}"')
    msg = "–ü—Ä–∏–≤–µ—Ç!"
    await message.bot.send_message(message.chat.id, msg)


@dp.message_handler(
    lambda message: (
            not any(
                e in clean_inp(message.text).split(" ") for e in
                movie_phrases + greetings_phrases + actor_phrases + weather_phrases)),
    state=MainStates.initial)
async def process_dialogflow(message: Message):
    logger.info(f'User @{message.chat.username} said "{message.text}"')
    reply = await get_answer_dialogflow(message.text)
    logger.info(f'Bot answered to @{message.chat.username}: "{reply}"')
    await message.bot.send_message(message.chat.id, reply)
